# Light Bulb

# Standard namespaces
@prefix local: <local#>.
@prefix : <ex#>.
@prefix ex: <http://example.org/#>.
@prefix http: <http://www.w3.org/2011/http#>.
@prefix st: <http://purl.org/restdesc/states#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.

# Domain-specific namespaces
@prefix dbpedia: <http://dbpedia.org/resource/>.

local:unknown a dbpedia:Temperature.

local:lightbulb a :lightbulb.

local:devicelocation a :question;
	:text ("Where is the light bulb located?");
	:replyType :location.


{
	local:devicelocation :hasAnswer ?a

} => {
	local:lightbulb :locatedAt  ?a.
}.


{
	local:lightbulb :locatedAt  ?a.

} => {
	local:devicelocation :hasAnswer ?a
}.


local:sample_color a :Color;
  ex:hasValue "x".


{
	?new a :Color; ex:hasValue ?colorValue.
	?state a st:State;
		log:includes {local:state :power :on}.
	?url a local:url.
	local:lightbulb :locatedAt ?location.
}
=>
{
	_:request http:methodName "PUT";
		http:requestURI (?url "/led/color");
		http:reqBody ?colorValue.

	[ a st:StateChange;
		st:replaced { ?location :lightColor ?new. };
		st:parent ?state ].
}.



{
	?state a st:State;
	log:includes {local:state :power :off}.
	?url a local:url.
	local:lightbulb :locatedAt ?location.
}
=>
{
	_:request http:methodName "PUT";
	http:requestURI (?url "/pwr/switch");
	http:reqBody "1".

	[ a st:StateChange;
	st:replaced { local:state :power :on. ?location :light :on. };
	st:parent ?state ].
}.




{
	?state a st:State;
	log:includes {local:state :power :on}.
	?url a local:url.
	local:lightbulb :locatedAt ?location.
}
=>
{
	_:request http:methodName "PUT";
	http:requestURI (?url "/pwr/switch");
	http:reqBody "0".

	[ a st:StateChange;
	st:replaced { local:state :power :off.?location :light :off. };
	st:parent ?state ].
}.



{

	local:lightbulb :locatedAt ?location.
	?state a st:State;
			log:includes {?location :lightColor ?old. };
			log:notIncludes {local:state :power ?xx.}.
	local:state :power ?powerstate.

}=>{


	[ a st:StateChange;
		st:replaced {local:state :power ?powerstate.  ?location :light  ?powerstate. };
		st:parent ?state ].
}.


{
	local:lightbulb :locatedAt  ?a.

} => {
	?a :hasAction :lightColor.
}.

 local:state :power :on.